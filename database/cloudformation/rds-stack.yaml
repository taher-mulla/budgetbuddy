AWSTemplateFormatVersion: '2010-09-09'
Description: 'BudgetBuddy Database - Simple RDS PostgreSQL for MVP'

Parameters:
  DBPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: Database master password (min 8 characters)
    
  DBUsername:
    Type: String
    Default: postgres
    Description: Database master username
    
  DBName:
    Type: String
    Default: budgetbuddy
    Description: Database name

Resources:
  # VPC - Simple, single public subnet for easy access
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: BudgetBuddy-VPC

  # Internet Gateway for public access
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: BudgetBuddy-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Two subnets in different AZs (required by RDS)
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: BudgetBuddy-Subnet1

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: BudgetBuddy-Subnet2

  # Route table for internet access
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: BudgetBuddy-RouteTable

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTable

  # DB Subnet Group (RDS requirement)
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for BudgetBuddy RDS
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2
      Tags:
        - Key: Name
          Value: BudgetBuddy-DBSubnetGroup

  # Security Group - Allow PostgreSQL from anywhere (for MVP/pgAdmin access)
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow PostgreSQL access for BudgetBuddy
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
          Description: PostgreSQL access (restrict this in production!)
      Tags:
        - Key: Name
          Value: BudgetBuddy-DB-SG

  # RDS PostgreSQL Instance - Smallest/cheapest for MVP
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: budgetbuddy-db
      DBName: !Ref DBName
      Engine: postgres
      EngineVersion: '17.4'
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      StorageType: gp3
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: true
      BackupRetentionPeriod: 7
      DeletionProtection: false
      StorageEncrypted: true
      Tags:
        - Key: Name
          Value: BudgetBuddy-DB

Outputs:
  DBEndpoint:
    Description: Database endpoint address
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-DBEndpoint'
  
  DBPort:
    Description: Database port
    Value: !GetAtt DBInstance.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-DBPort'
  
  DBName:
    Description: Database name
    Value: !Ref DBName
    Export:
      Name: !Sub '${AWS::StackName}-DBName'
  
  DBUsername:
    Description: Database username
    Value: !Ref DBUsername
    Export:
      Name: !Sub '${AWS::StackName}-DBUsername'
  
  ConnectionString:
    Description: Full connection string (paste password manually)
    Value: !Sub 'postgresql://${DBUsername}:YOUR_PASSWORD@${DBInstance.Endpoint.Address}:${DBInstance.Endpoint.Port}/${DBName}'
  
  VPCId:
    Description: VPC ID (for Lambda later)
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  
  SecurityGroupId:
    Description: DB Security Group ID (for Lambda later)
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-DBSecurityGroup'
  
  Subnets:
    Description: Subnet IDs (for Lambda later)
    Value: !Sub '${Subnet1},${Subnet2}'
    Export:
      Name: !Sub '${AWS::StackName}-Subnets'